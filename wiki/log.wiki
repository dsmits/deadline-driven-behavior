=30-5-2014=
I have been working on my thesis but haven't logged much because I was busy debugging and hadn't found the mistakes yet.

Todo:
I use "rate", a property that belongs to timed transitions to indicate the likelihood of a transition firing. However, as I found out a while ago, timed transitions do not really work in the implementations of petri nets that I use. I hacked around that but in the code  I still do something with rate. I calculate rate based on how much time there is left and how long a situation takes but I think I should change my formula. I will write out what I have and what I think it should be next week. Today I will look at other bugs.

=19-5-2014=
Maybe I have to check my Dijkstra path planning, because I don't know how it works any more. I understand Dijkstra's algorithm, but I can't really find in my code how I determine the distance between places.

I also decided that I will probably have to remove the wander action from the basic Pedestrian Petri net, because I think it might not be included in the calculations when deciding an action based on how much time there is left. I know I'm getting sidetracked, but I think it is quite essential to fix this first before I continue with my experiments.

=16-5-2014=
I plotted the results of the frequency of the different actions.

https://deadline-driven-behavior.googlecode.com/svn/trunk/google%20code/first%20plot%20sigmoid%200001.png

The wander action seems to dominate the plot too much to really be able to say something about the other actions. The idle behavior is not really saying much either because that is an action that is executed when the current place a pedestrian's token is in does not map to an actual action.
I expect with the current parameters that there won't be much difference anyway between hurried and relaxed behavior.

Maybe I can create a scenario where there is no goal action and see if I can make the simulation so that there will be more hurried behavior towards the end of the run and more relaxed behavior in the beginning. I will back up my code before I do that.
I plan on modifying this monday. At some point in the near future however, I will have to accept the results I have, even if they're not what I want them to be, and finish the rest of my thesis. I also have to look at the rest of my research questions and see if I can generate results that answer those.

=14-5-2014=
I generated the xml for defining the multiple areas for slowwander and fastwander. Even though the environment contains a new situation on every 20 by 20 square, which results in 625 new situations (the area of the environment is 500x500 in total, the unit in which the size is defined is a bit difficult), it does not slow down the system much more, because only petri nets are fired that are at that moment attached to a pedestrian. Now the pedestrians are executing slowwander and fastwander throughout the simulation, and not just at the very beginning.

Now I have to tweak the parameters of the probabilities for go-to-goal and the other actions in such a way that there is a more or less gradually growing frequency of go-to-goal actions and see how the frequency of fastwander and slow wander changes over time.

=12-5-2014=
Slow and fast wander are executed when I check the log, but in the gui I only see the regular wander behavior. This is because fast and slow wander are only executed at the very beginning of the simulation. This is probably because I took a precaution to prevent the pedestrians from getting stuck in a loop by disconnecting them from a Petri net when they are finished with it, even though they are still in the situation. Maybe when the parameters are tweaked right this precaution isn't necessary but I'll leave it in for now.

I will try to work around this by creating multiple smaller situations for the slow and fast wander Petri nets. Hopefully this doesn't slow down the system too much, otherwise I will have to try to remove the precaution I put in earlier and check whether the pedestrians get stuck in a loop or if this doesn't happen anymore.

For now I'm working on a script to quickly generate the xml for defining the multiple slowwander and fastwander situations. I will continue working on that wednesday when I hopefully have more concentration.


= Log for 1-5-2014=
I created a script to count how much every action is taken at every timestep. I can't really find interesting information yet. The frequency of slow wander is not significantly different form fast wander in this configuration. I will have to see if this can be changed by tweaking the parameters or this is due to some mistake I made. I will look at that tomorrow.

=Log for 25-4-2014=
Found the mistake. The new Petri nets looked like this:

https://deadline-driven-behavior.googlecode.com/svn/trunk/google%20code/slowWanderSituation.png

instead of this:

https://deadline-driven-behavior.googlecode.com/svn/trunk/google%20code/slowWanderSituation2.png

Also found out that I'm having some svn troubles but I'm probably not going to fix that.

Unfortunately, now I've added these two new situations, the simulation runs a lot slower. Hopefully it helps if I comment out most of the printing statements.

I now have a log that contains for every step which action every pedestrian takes. I will have to make a script which counts the number of pedestrians take a certain action for every action. Probably only slowwander and fastwander are important. I have to take into account that these actions take multiple steps and that slowwander might take not the same amount of steps. At least, that is how it is supposed to go, only I think that now slowwander takes the same number of steps only doesn't get as far as fastwander, the estimate in the petri net does differ though, so I might be gaming my own system a little. I will have to figure out if this is something I will have to work on. Maybe it doesn't matter for the purpose of the graphs.

Probably won't be able to finish the script now, I'll have to continue on it monday, when I have more energy.

=Log for 23-4-2014=
I wanted to add the _fast wander_ and _slow wander_ actions to the base pedestrian Petri net, but realized that my system maybe only estimates how long behavior takes when they are in a separate situation Petri net. So I am probably going to create two new situations for the two actions that will have the size of the entire environment.

I notice that in situations.xml there are several properties that I set for every situation. One of them is estimated time. I have to find out whether I use this or if I use the estimated time computed with Dijkstra's algorithm.

*Update:* I checked the code and it seems that Dijkstra's algorithm is used and the estimated time property is useless.

I added the slowwander and fastWander situations to situations.xml but now all the pedestrians remain idle. Something has gone wrong. I will try to find out what the problem is this friday.

=Log for 17-4-2014=
I fixed the twopeopletoiletsituation. The pedestrians got stuck because a while ago I "fixed" the Petri net to make it more elegant. As a result of that, the Petri net had lost the guarantee that both sink transitions would always fire. It was possible that one sink transition fired twice and the other one wouldn't fire. I fixed this again.
Furthermore, in the past I added some extra places and transitions so that the Petri net would wait until the pedestrians had finished their actions before it would fire the sink transitions. In future implementations something has to be done about this in the code instead of in the Petri nets, but for now I'll keep it like this.

I also started working on some distinct hurried and relaxed behavior. For now I only modified the wander action so the pedestrians can wander both fast and slowly. I still have to incorporate these actions into the pedestrians' Petri nets. I will do that next time. Maybe I can then do an experiment focused only on these two actions and see if the ratio of fast vs. slow wandering changes over time.
Next time I will work on this.

=Log for 11-4-2014=
In order to distinguish between hurried and relaxed behavior I will have to add running and slow walking varieties of the current actions. I will have to see if it is worth the time it takes to implement that.

Also, I notice the twopeopletoilet behavior does not work as planned. The pedestrian that waits for the other one does not wait long enough. Is this a mistake in the Petri net?  Do I use an old Petri net for this or is this because of how the actions in the multi agent simulator are implemented? Probably the second. A way to improve this would be to have the pedestrian that goes to the toilet go back to his friend. However, this will require a lot of extra coding.

On a second run, it seems that the gototoilet pedestrians get stuck in their Petri net and remain idle far after all the other pedestrians have gone to their goal.
In short, there are now a couple of things in the code that I think need to be fixed:
  * More varied behavior to distinguish between hurried and relaxed
  * Pedestrians doing twopeopletoilet behavior get stuck in petri net.
  * One pedestrian does not wait long enough for the other in the gototoilet situation or both pedestrians get stuck.

Though I can probably go on without fixing the last issue. Today I will start on debugging the twopeopletoilet behavior and I will probably continue doing that on monday.


=Log for 4-4-2014=
Today I finished writing the code to log the pedestrians' actions at every step. Now I have to tweak the parameters so that the pedestrians walk around for a reasonable time before going to their goal, run the simulation, analyse that run and see if I can find some interesting results.

=Log for 2-4-2014=
Today I will look at what is the best way to log the actions. In this log it is probably not possible to retrieve from which situation this action comes from, but hopefully this still gives enough information about the influence of time on the ratio of hurried behavior or actions vs relaxed behavior.
In this log I want to register the time at which the action is taken, or alternatively how much time is left until the deadline, whichever is more convenient to log. Secondly, I want the name of the action that is taken at that time. For this I will use the classname of the current IMasonAction implementation.
However, I don't know yet whether I can implement the logging of the actions in the implementations of the IMasonAction interface which seems the most conventient to me at the moment, or whether I have to do this somewhere else.

I just realize that if I keep track of which agent is performing the action, which is probably easier to find, it is not important to register the time at every log entry, because every pedestrian executes an action at every single timestep. I'm still in doubt though if this is the right way to analyze hurried or relaxed behavior but I'll see if it leads to useful graphs.

I started on writing the code for logging the actions but since I'm unable to concentrate any more I will continue this friday.

=Log for 31-3-2014=
I forgot to say an important point in my previous log. I only just noticed that my research questions don't mention anything about emergent behavior, even though that is an important aspect of my research. I think it would be better to add a subquestion in which I say something about emergence, or is it too late to add something like that?
Since my supervisor is not available this week I will work on running a few experiments in the meantime and see if I can make a nice graph showing the effect of time on hurried and relaxed behavior.

I have to change something about how everything is logged, because at the moment, it seems that I log whenever a pedestrian enters a certain situation. This means that whenever a pedestrian executes an action that is not part of a situation, but just part of the set of basic actions every pedestrian has, this is not logged. 


=Log for 28-3-2014=
Last time I started working too early again on my thesis. A few weeks again I tried again with more success.
At the moment I'm trying to decide what experiments to use and how to display my results so that I answer my research questions. I'm considering adding another subquestion that points out the importance of emergent behavior. Probably something along the lines of:
Is it possible to have emergent behavior such as variety in hurried and relaxed behavior result from setting a certain deadline?
This question needs to be tweaked.

Maybe if I do this I can categorize actions as either hurried or relaxed, and show how time influences the frequency of actions from these two categories.
Maybe it is important to add a few simple actions or tweak a few Petri nets so that there is a hurried and relaxed version of some behaviors.

Or maybe I can rate actions on how much time they take and put that in a graph. The x axis will be time left until the deadline and the y axis will be the average number of steps the chosen actions take at that moment or interval.

----

=Log for 3-9-2013=
Today I am going to start on my thesis again after a long time. Today I'm just doing some minor things, and read my thesis again. I am considering rewriting my code to make it less sloppy and buggy. Maybe I have to search for better Petri net software.







=Log for 16-2-2012=
I wanted to easily make the behavior more interesting and varied so added "stand still" behavior to the whole area, but the implementation now prevents infinite loops into certain behavior by making sure a behavior cannot be done multiple times when an agent is still in a certain situation area but is this what we want for the "standing still" situation? Probably this implementation is still the best choice but it makes standing still more "artificial looking" because the areas in which the agents are able to stand still have to be manually placed.

=Experiments on 15-2-2012=
How am I going to do the experiments? Since I vary the functions of the go-to-goal behavior at the moment, I should check the frequency of the firing of transitions to other situations.
We should count how many times a transition to a certain situation is fired at a certain timestep (measured with respect to the time of the deadline)